'\" t
.\"     Title: ibcmda
.\"    Author: Frank Mori Hess
.\" Generator: DocBook XSL Stylesheets vsnapshot <http://docbook.sf.net/>
.\"      Date: 10/04/2025
.\"    Manual: 	Traditional API Functions 
.\"    Source: linux-gpib 4.3.7
.\"  Language: English
.\"
.TH "IBCMDA" "3" "10/04/2025" "linux-gpib 4.3.7" "Traditional API Functions"
.\" -----------------------------------------------------------------
.\" * Define some portability stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
ibcmda \- write command bytes asynchronously (board)
.SH "SYNOPSIS"
.sp
.ft B
.nf
#include <gpib/ib\&.h>
.fi
.ft
.HP \w'int\ ibcmda('u
.BI "int ibcmda(int\ " "ud" ", const\ void\ *" "commands" ", long\ " "num_bytes" ");"
.SH "DESCRIPTION"
.PP
ibcmda() is similar to
ibcmd()
except it operates asynchronously\&. ibcmda() does not wait for the sending of the command bytes to complete, but rather returns immediately\&.
.PP
While an asynchronous operation is in progress, most library functions will fail with an EOIP error\&. In order to successfully complete an asynchronous operation, you must call
ibwait()
with CMPL set in the wait mask, until the CMPL bit is set ibsta\&. Asynchronous operations may also be aborted with an
ibstop()
or
ibonl()
call\&.
.PP
After the asynchronous I/O has completed and the results resynchronized with the current thread, the Linux\-GPIB extensions
AsyncIbsta,
AsyncIberr,
AsyncIbcnt, AsyncIbcntl
may be useful to more cleanly separate the results of the asynchronous I/O from the results of the ibwait or similar call used to resynchronize\&.
.SH "RETURN VALUE"
.PP
The value of
ibsta
is returned\&.
.SH "COPYRIGHT"
.br
Copyright \(co 2003-2006, 2008 Frank Mori Hess
.br
