'\" t
.\"     Title: RcvRespMsg
.\"    Author: Frank Mori Hess
.\" Generator: DocBook XSL Stylesheets vsnapshot <http://docbook.sf.net/>
.\"      Date: 10/04/2025
.\"    Manual: 	"Multidevice" API Functions
.\"    Source: linux-gpib 4.3.7
.\"  Language: English
.\"
.TH "RCVRESPMSG" "3" "10/04/2025" "linux-gpib 4.3.7" ""Multidevice" API Functions"
.\" -----------------------------------------------------------------
.\" * Define some portability stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
RcvRespMsg \- read data
.SH "SYNOPSIS"
.sp
.ft B
.nf
#include <gpib/ib\&.h>
.fi
.ft
.HP \w'void\ RcvRespMsg('u
.BI "void RcvRespMsg(int\ " "board_desc" ", void\ *" "buffer" ", long\ " "count" ", int\ " "termination" ");"
.SH "DESCRIPTION"
.PP
RcvRespMsg() reads data from the bus\&. A device must have already been addressed as talker (and the board as listener) before calling this function\&. Addressing may be accomplished with the
ReceiveSetup()
function\&.
.PP
Up to
\fIcount\fR
bytes are read into the array specified by
\fIbuffer\fR\&. The
\fItermination\fR
argument specifies the 8\-bit end\-of\-string character (which must be a value from 0 to 255) whose reception will terminate a read\&.
\fItermination\fR
can also be set to the \*(AqSTOPend\*(Aq constant, in which case no end\-of\-string character will be used\&. Assertion of the EOI line will always end a read\&.
.PP
You may find it simpler to use the slightly higher level function
Receive(), since it does not require addressing and reading of data to be performed separately\&.
.SH "COPYRIGHT"
.br
Copyright \(co 2003-2006, 2008 Frank Mori Hess
.br
