'\" t
.\"     Title: ibrda
.\"    Author: Frank Mori Hess
.\" Generator: DocBook XSL Stylesheets vsnapshot <http://docbook.sf.net/>
.\"      Date: 10/04/2025
.\"    Manual: 	Traditional API Functions 
.\"    Source: linux-gpib 4.3.7
.\"  Language: English
.\"
.TH "IBRDA" "3" "10/04/2025" "linux-gpib 4.3.7" "Traditional API Functions"
.\" -----------------------------------------------------------------
.\" * Define some portability stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
ibrda \- read data bytes asynchronously (board or device)
.SH "SYNOPSIS"
.sp
.ft B
.nf
#include <gpib/ib\&.h>
.fi
.ft
.HP \w'int\ ibrda('u
.BI "int ibrda(int\ " "ud" ", void\ *" "buffer" ", long\ " "num_bytes" ");"
.SH "DESCRIPTION"
.PP
ibrda() is similar to
ibrd()
except it operates asynchronously\&. ibrda() does not wait for the reception of the data bytes to complete, but rather returns immediately\&.
.PP
While an asynchronous operation is in progress, most library functions will fail with an EOIP error\&. In order to successfully complete an asynchronous operation and resynchronize its results with the current thread, you must call
ibwait()
with CMPL set in the wait mask, until the CMPL bit is set ibsta\&. Asynchronous operations may also be completed by a call to
ibstop()
or
ibonl()
call\&. Note, ibwait() will only complete the asynchronous operation if you explicitly set the CMPL bit in the wait mask parameter of ibwait()\&.
.PP
After the asynchronous I/O has completed and the results resynchronized with the current thread, the Linux\-GPIB extensions
AsyncIbsta,
AsyncIberr,
AsyncIbcnt, AsyncIbcntl
may be useful to more cleanly separate the results of the asynchronous I/O from the results of the ibwait or similar call used to resynchronize\&.
.SH "RETURN VALUE"
.PP
The value of
ibsta
is returned\&.
.SH "COPYRIGHT"
.br
Copyright \(co 2003-2006, 2008 Frank Mori Hess
.br
