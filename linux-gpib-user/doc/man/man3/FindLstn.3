'\" t
.\"     Title: FindLstn
.\"    Author: Frank Mori Hess
.\" Generator: DocBook XSL Stylesheets vsnapshot <http://docbook.sf.net/>
.\"      Date: 10/04/2025
.\"    Manual: 	"Multidevice" API Functions
.\"    Source: linux-gpib 4.3.7
.\"  Language: English
.\"
.TH "FINDLSTN" "3" "10/04/2025" "linux-gpib 4.3.7" ""Multidevice" API Functions"
.\" -----------------------------------------------------------------
.\" * Define some portability stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
FindLstn \- find devices
.SH "SYNOPSIS"
.sp
.ft B
.nf
#include <gpib/ib\&.h>
.fi
.ft
.HP \w'void\ FindLstn('u
.BI "void FindLstn(int\ " "board_desc" ", const\ Addr4882_t\ " "padList[]" ", Addr4882_t\ " "resultList[]" ", int\ " "maxNumResults" ");"
.SH "DESCRIPTION"
.PP
FindLstn() will check the primary addresses in the
\fIpadList\fR
array for devices\&. The GPIB addresses of all devices found will be stored in the
\fIresultList\fR
array, and
ibcnt
will be set to the number of devices found\&. The
\fImaxNumResults\fR
parameter limits the maximum number of results that will be returned, and is usually set to the number of elements in the
\fIresultList\fR
array\&. If more than
\fImaxNumResults\fR
devices are found, an ETAB error is returned in
iberr\&. The
\fIpadList\fR
should consist of primary addresses only, with no secondary addresses (all possible secondary addresses will be checked as necessary)\&.
.PP
Your GPIB board must have the capability to monitor the NDAC bus line in order to use this function (see
iblines)\&.
.PP
This function has the additional effect of addressing the board as talker for the duration of the Find Listeners protocol, which is beyond what IEEE 488\&.2 specifies\&. This is done because some boards cannot reliably read the state of the NDAC bus line unless they are the talker\&. Being the talker causes the board\*(Aqs gpib transceiver to configure NDAC as an input, so its state can be reliably read from the bus through the transceiver\&.
.SH "COPYRIGHT"
.br
Copyright \(co 2003-2006, 2008 Frank Mori Hess
.br
